import * as React from 'react';
import { ViewProps, ViewStyle } from 'react-native';
import { Theme, Shadow, Border } from './theme';
export interface BoxProps extends ViewProps {
    alignItems?: ViewStyle['alignItems'];
    alignSelf?: ViewStyle['alignSelf'];
    bg?: string;
    border?: number | Border;
    children?: React.ReactNode;
    flex?: number;
    flexDirection?: ViewStyle['flexDirection'];
    flexGrow?: number;
    flexShrink?: number;
    flexWrap?: ViewStyle['flexWrap'];
    height?: number;
    justifyContent?: ViewStyle['justifyContent'];
    m?: number;
    mb?: number;
    ml?: number;
    mr?: number;
    mt?: number;
    mx?: number;
    my?: number;
    p?: number;
    pb?: number;
    pl?: number;
    pr?: number;
    pt?: number;
    px?: number;
    py?: number;
    shadow?: number | Shadow;
    width?: number;
}
export declare function getStyleSheetFromBoxProps(props: BoxProps, theme: Theme): {
    box: {
        alignItems: "flex-start" | "flex-end" | "center" | "stretch" | "baseline" | undefined;
        alignSelf: "flex-start" | "flex-end" | "center" | "stretch" | "baseline" | "auto" | undefined;
        flex: number | undefined;
        flexDirection: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
        flexGrow: number | undefined;
        flexShrink: number | undefined;
        flexWrap: "wrap" | "nowrap" | "wrap-reverse" | undefined;
        height: number | undefined;
        justifyContent: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
        width: number | undefined;
        backfaceVisibility?: "visible" | "hidden" | undefined;
        backgroundColor?: string | undefined;
        borderBottomColor?: string | undefined;
        borderBottomEndRadius?: number | undefined;
        borderBottomLeftRadius?: number | undefined;
        borderBottomRightRadius?: number | undefined;
        borderBottomStartRadius?: number | undefined;
        borderBottomWidth?: number | undefined;
        borderColor?: string | undefined;
        borderEndColor?: string | undefined;
        borderLeftColor?: string | undefined;
        borderLeftWidth?: number | undefined;
        borderRadius?: number | undefined;
        borderRightColor?: string | undefined;
        borderRightWidth?: number | undefined;
        borderStartColor?: string | undefined;
        borderStyle?: "solid" | "dotted" | "dashed" | undefined;
        borderTopColor?: string | undefined;
        borderTopEndRadius?: number | undefined;
        borderTopLeftRadius?: number | undefined;
        borderTopRightRadius?: number | undefined;
        borderTopStartRadius?: number | undefined;
        borderTopWidth?: number | undefined;
        borderWidth?: number | undefined;
        opacity?: number | undefined;
        testID?: string | undefined;
        elevation?: number | undefined;
        alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
        aspectRatio?: number | undefined;
        borderEndWidth?: string | number | undefined;
        borderStartWidth?: string | number | undefined;
        bottom?: string | number | undefined;
        display?: "flex" | "none" | undefined;
        end?: string | number | undefined;
        flexBasis?: string | number | undefined;
        left?: string | number | undefined;
        margin?: string | number | undefined;
        marginBottom?: string | number | undefined;
        marginEnd?: string | number | undefined;
        marginHorizontal?: string | number | undefined;
        marginLeft?: string | number | undefined;
        marginRight?: string | number | undefined;
        marginStart?: string | number | undefined;
        marginTop?: string | number | undefined;
        marginVertical?: string | number | undefined;
        maxHeight?: string | number | undefined;
        maxWidth?: string | number | undefined;
        minHeight?: string | number | undefined;
        minWidth?: string | number | undefined;
        overflow?: "visible" | "hidden" | "scroll" | undefined;
        padding?: string | number | undefined;
        paddingBottom?: string | number | undefined;
        paddingEnd?: string | number | undefined;
        paddingHorizontal?: string | number | undefined;
        paddingLeft?: string | number | undefined;
        paddingRight?: string | number | undefined;
        paddingStart?: string | number | undefined;
        paddingTop?: string | number | undefined;
        paddingVertical?: string | number | undefined;
        position?: "absolute" | "relative" | undefined;
        right?: string | number | undefined;
        start?: string | number | undefined;
        top?: string | number | undefined;
        zIndex?: number | undefined;
        direction?: "inherit" | "ltr" | "rtl" | undefined;
        shadowColor?: string | undefined;
        shadowOffset?: {
            width: number;
            height: number;
        } | undefined;
        shadowOpacity?: number | undefined;
        shadowRadius?: number | undefined;
        transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform)[] | undefined;
        transformMatrix?: number[] | undefined;
        rotation?: number | undefined;
        scaleX?: number | undefined;
        scaleY?: number | undefined;
        translateX?: number | undefined;
        translateY?: number | undefined;
    };
};
declare const Box: ({ style, ...props }: BoxProps) => JSX.Element;
export default Box;
