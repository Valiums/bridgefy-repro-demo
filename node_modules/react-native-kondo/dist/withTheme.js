var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import useTheme from './useTheme';
function withTheme(WrappedComponent) {
    const WithThemeComponent = (_a) => {
        var { forwardedRef } = _a, props = __rest(_a, ["forwardedRef"]);
        const theme = useTheme();
        return React.createElement(WrappedComponent, Object.assign({ ref: forwardedRef, theme: theme }, props));
    };
    WithThemeComponent.displayName = `withTheme(${WrappedComponent.displayName ||
        WrappedComponent.name ||
        'Component'})`;
    hoistNonReactStatics(WithThemeComponent, WrappedComponent);
    // @ts-ignore
    // eslint-disable-next-line
    return React.forwardRef((props, ref) => (React.createElement(WithThemeComponent, Object.assign({ forwardedRef: ref }, props))));
}
export default withTheme;
